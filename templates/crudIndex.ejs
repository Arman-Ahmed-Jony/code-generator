<script setup>
import { use<%=entityName.replace(/\w/, c => c.toUpperCase())%>Store } from 'src/stores/<%=entityName %>-store'
import { computed, onMounted, ref } from 'vue'
import <%=entityName.replace(/\w/, c => c.toUpperCase()) %>Form from '../components/<%=entityName.replace(/\w/, c => c.toUpperCase())%>Form.vue'
import <%=entityName.replace(/\w/, c => c.toUpperCase()) %>List from '../components/<%=entityName.replace(/\w/, c => c.toUpperCase())%>List.vue'
import { useCommonStore } from 'src/stores/common-store'
import { useBackButton } from 'src/composables/backButton'

useBackButton()

const commonStore = useCommonStore()
const createDialog = ref(false)
const editDialog = ref(false)

const <%=entityName %>Store = use<%=entityName.replace(/\w/, c => c.toUpperCase())%>Store()
const <%=entityName %>s = computed(() => <%=entityName %>Store.<%=entityName %>s)

onMounted(() => {
  <%=entityName %>Store.getAll()
})

const handleCreate = async (data) => {
  try {
    await <%=entityName %>Store.create(data)
    createDialog.value = false
  } catch (error) {}
}

const handleView = (item) => {
  //here gose view related implementation
}

const selected<%=entityName.replace(/\w/, c => c.toUpperCase())%> = ref({})
const handleEdit = async (item) => {
  await <%=entityName %>Store.update(item.id, item)
  editDialog.value = false
}
const handleDelete = (id) => {
  <%=entityName %>Store.deleteById(id)
}
</script>
<template>
  <q-page padding>
    <content-loader :loading="commonStore.fetching">
      <<%=entityName.replace(/\w/, c => c.toUpperCase()) %>List
        v-model="<%=entityName %>s"
        @view="handleView"
        @edit="editDialog=true, selected<%=entityName.replace(/\w/, c => c.toUpperCase())%> = $event"
        @delete="handleDelete"
      />
    </content-loader>

    <q-page-sticky
      position="bottom-right"
      :offset="[18, 18]"
    >
      <q-btn
        rounded
        glossy
        icon="o_add"
        color="primary"
        padding="sm"
        size="lg"
        @click="createDialog = true"
      />
    </q-page-sticky>

    <q-dialog v-model="createDialog">
      <q-card
        style="width: 700px;"
        class="q-pa-sm"
      >
        <<%=entityName.replace(/\w/, c => c.toUpperCase()) %>Form @submit="handleCreate">
          <template #action>
            <div class="row justify-end">
              <q-btn
                color="primary"
                label="Create"
                type="submit"
                no-caps
              />
            </div>
          </template>
        </<%=entityName.replace(/\w/, c => c.toUpperCase()) %>Form>
      </q-card>
    </q-dialog>
    <q-dialog v-model="editDialog">
      <q-card
        style="width: 700px;"
        class="q-pa-sm"
      >
        <<%=entityName.replace(/\w/, c => c.toUpperCase()) %>Form
          @submit="handleEdit"
          :model-value="selected<%=entityName.replace(/\w/, c => c.toUpperCase())%>"
        >
          <template #action>
            <div class="row justify-end">
              <q-btn
                color="primary"
                label="Edit"
                type="submit"
                no-caps
              />
            </div>
          </template>
        </<%=entityName.replace(/\w/, c => c.toUpperCase()) %>Form>
      </q-card>
    </q-dialog>
  </q-page>
</template>
